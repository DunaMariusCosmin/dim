<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_qly_bwm_ch">
 <title>Creating Maps</title>
 <conbody>
  
  <p>A map file consists of a hierarchical organization of &lt;topicref>, &lt;mapref>, and
   &lt;glossref> elements. Each of these elements requires an <i>@href</i> attribute that
   points to an individual topic, map, or glossary topic. </p>
  <p>When building a map, consider the following strategies:<ul id="ul_kgc_xwl_ch">
    <li>Start by adding task topics, which should be the primary focus of your documentation
     according to minimalism principles. Consider how best to organize these tasks based on your
     audience. For example, you might order the tasks based on workflow or the sequence in which the
     tasks might be completed; based on frequency of use from most common to least common; or based
     on who will be performing the tasks. Then, add concept, troubleshooting, and reference topics
     that support the tasks. Do not add concept or reference topics that you cannot relate to at
     least one task.</li>
    <li>You can include a topic more than once within your map. However, to maintain context for the
     user during navigation, you should provide a unique name for each instance of the topic using
     the <i>@copy-to</i> attribute.</li>
    <li>Just because you have created multiple topic files doesn't mean that they need to be
     displayed as multiple topics. Sometimes you may have created multiple topics for reuse
     purposes, but the end user should see all the content as one comprehensive topic. Specify
      <i>@chunk="to-content"</i> on the parent topic to combine it with all nested children into one
     topic on output.</li>
    <li>Rather than nest topics several levels deep, consider creating submaps that you then
     reference with a &lt;mapref>. In general, it's a good idea to create submaps whenever you are
     nesting more than five topics to keep your maps clean and easily interpretable by others.</li>
    <li>Avoid nesting topics more than four levels deep. Although you can nest maps in maps, keep in
     mind the levels you are creating by nesting maps in maps. </li>
    <li>A table of contents is automatically built when you process a map. To keep a topic from
     appearing in the TOC, set the <i>@toc </i>attribute to "no".</li>
   </ul></p>
  <section id="TitlingMaps">
   <title>Titling Maps</title>
   <p>In general, follow the same guidelines for writing map titles as for topics; see <xref
     href="c_TitlingTopics.dita#TitlingTopics"/>. In addition, however, consider the following:<ul
     id="ul_u23_2rp_xh">
     <li>In general, map titles will tend to be less specific than topic titles because they are
      summarizing the content of all the topics nested within the map. Think about how you might
      categorize the information in the map; often that category should be part of the map
      title.</li>
     <li> Ensure the title indicates the range of topics it contains. For example, if the content
      covers both removal and replacement procedures for a board, it would be incomplete and
      misleading to title the map "Replacing Boards."Â  </li>
     <li>In any single publication, the map titles will be closely tied together. Each will deal
      with some aspect of the overall topic of the book. Therefore, be careful to make each map
      title clearly differentiated in terms of the specific contents it contains compared to others
      in the same publication.</li>
     <li>Avoid starting all map titles with the same words, such as a product name. Users are
      scanning for words that help them differentiate between the maps; put those words first.</li>
    </ul></p>
  </section>
  <section id="section_rk1_1bw_kn">
   <title>Linking Topics</title>
   <p>In addition to establishing a hierarchy among topics, the way you group topics together in
        your map affects the manner in which you establish links among them. In DITA, parent and
        child topics automatically receive a two-way link between each other. However, all other
        relationships must be explicitly established through attributes or relationship tables. The
          <i>@collection-type</i> attribute enables you to establish links through the hierarchical
        structure of your map, thereby saving you effort in defining those links through a
        relationship table. You can establish two types of relationships with the
          <i>@collection-type</i> attribute:<dl id="collectiontype">
          <dlentry>
            <dt>family</dt>
            <dd>All topics within the group are related to all other topics.</dd>
          </dlentry>
          <dlentry>
            <dt>sequence</dt>
            <dd>Topics are related to the topics immediately before and after them in the map
              through Next and Previous links.</dd>
          </dlentry>
        </dl></p>
   <p>Specify the <i>@collection-type</i> attribute on the parent topic of the topics you want to
    link together.</p>
   <codeblock scale="80">placeholder for example</codeblock>
   <note>In some cases you may not want to promote one topic over another. <draft-comment
          author="joannhackos">I don't understand what this means? Promoting one topic over
          another?</draft-comment>In this case, you can first nest the related topics in a
        &lt;topicgroup> and then assign the <i>@collection-type</i> attribute to establish the type
        of relationship.<codeblock scale="80">Placeholder for example</codeblock></note>
   <p>When topics are not grouped together within the hierarchy of the map, you must use a
        relationship table to establish links among them. See <xref
          href="c_RelationshipTables.dita#RelTableOverview"/> for instructions. </p>
  </section>
  <section><!-- <title>Compiling a Glossary Map (DITA 1.1 only)</title>
      <p><draft-comment>Include only if company is not yet in DITA 1.2</draft-comment>To compile all
        your glossary terms into a single glossary for a deliverable, create a &lt;map> file for the
        glossary. Insert each term in alphabetical order in the map using a &lt;topicref> element to
        point to each glossary term file.</p>
      <p>You may want to include &lt;topichead> elements to create subheadings for each letter of
        the alphabet. Define each subhead by defining the <i>@navtitle </i>attribute, as shown in
        the example.</p>
      <codeblock>
&lt;map>
&lt;title>Glossary&lt;/title>
&lt;topichead navtitle="..."/>
&lt;topicref href="GUID"/>
&lt;topicref href="GUID"/>
...
&lt;/map></codeblock>--></section>
  <section id="section_sb5_hjd_q4">
   <title>Compiling a Glossary Map</title>
   <p>To compile all your glossary terms into a single glossary for a deliverable, create a &lt;map>
    file for the glossary. Insert each term in the map using a &lt;glossref> element, instead of the
    typical &lt;topicref>. The &lt;glossref> element requires that you provide a <i>@keys
    </i>attribute. In most cases, use the term or an abbreviation as the <i>@keys</i> value. In
    addition, if you want the glossary terms and acronyms to appear in PDF output, you also need to
    set the <i>@print </i>attribute to "yes".</p>
   <note>You may find it useful to alphabetize the glossary entries in your map. However, the
     <keyword keyref="companyname"/> transform will automatically alphabetize the terms for you when
    you generate your content.</note>
   <!--<p>You may want to include &lt;topichead> elements to create subheadings for each letter of
        the alphabet. Define each subhead by nesting a &lt;topicmeta> element within the
        &lt;topichead> and then a &lt;navtitle> element within the &lt;topicmeta> element, as shown
        in the example.  </p>
      <codeblock>&lt;map>
&lt;title>Glossary&lt;/title>
&lt;topichead>
  &lt;topicmeta>
    &lt;navtitle>...&lt;/navtitle>
  &lt;/topicmeta>
&lt;/topichead>
&lt;glossref keys=" " href="GUID"/>
&lt;glossref keys=" " href="GUID"/>
...
&lt;/map></codeblock>-->
   <codeblock>Placeholder for example not related to topichead</codeblock>
  </section>
 </conbody>
</concept>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vtz_r2q_xh">
 <title>Reusing Elements Through Collection Files</title>
 <conbody>
    <draft-comment>This file includes 1.2 information and 1.1 workarounds. keep only those sections
      that apply. Be sure to add examples from the company content.</draft-comment>
    <p>Collection files are used to hold content that you want to reuse by reference in other
   topics. They enable you to edit similar content in one location and maintain simple and direct
   links between small pieces of reusable content and the topics in which they are used. By using
   collection files, you avoid complex inter-topic linking structures that are difficult to maintain
   and that rely on authors knowing which specific, individual topics contain information that might
   be useful to them. Instead, authors are able to easily locate reusable content in common folders
   and files. In addition, creating collection files helps to protect shared content from changes
   that would not apply in all reuse situations. When making changes in collection files, authors
   are aware that the content is reused and that they need to be aware of implications for changing
   the content.</p>
  <section>
   <title>When to Use</title>
   <p>Use collection files any time that you want to reuse portions of another topic within your
    current topic. Do not reuse content from a file that is not a collection file. Instead, move
    common content to a collection topic and then reference it.</p>
   <note>
    <p>Keep in mind that content within collection files can also be conditionalized or reference
          keys. Therefore, similar, but not exact, content might still be a candidate to be placed
          into collection files. </p>
   </note>
   <p>It is possible to create a topic body that is nothing but content references to other topics.
        However, if you find that all the references go to the same topic, you should probably be
        simply reusing that topic, perhaps with variables or conditional processing, instead of
        creating a new one. In addition, in all cases, the topic title and short description must be
        unique. Do not conref titles or short descriptions.</p></section>
  <section>
   <title>Creating and Structuring Collection Files</title>
   <p>Move shared content into collection files on the first instance of reuse and point both the
    original and new topic to the collection file. Do not reuse content from a file that is not a
    collection file. This practice reduces the overhead of managing and controlling common
    content.</p>
   <p>When creating or adding information to a collection file, follow these guidelines:<ul
     id="ul_ysg_3hx_xh">
     <li>With the obvious exception of elements exclusive to task or troubleshooting topics,
            use &lt;reference> topics for your collection topics. Use the &lt;section> element with
            titles to logically sort the collected content into related groupings so authors can
            more easily locate information in the collection.</li>
          <li>For task and troubleshooting topics, use the &lt;task> and &lt;troubleshooting> topic
            types, respectively. Because these topics will not allow you to nest their unique
            elements within a &lt;section> element, you will have to rely on xml comments to locate
            the information within the collection.</li>
          <li>Sort content into element-specific collection files, such as:<ul id="ul_kym_1gx_xh">
       <li>Notes</li>
       <li>Warnings</li>
       <li>Cautions</li>
       <li>Steps</li>
       <li>Prerequisites</li>
       <li>Postrequisites</li>
       <li>Descriptive paragraphs</li>
      </ul>By storing reusable information by element type, authors can more easily locate
      information when it is needed.<note>Do not create collection files for &lt;title> or
       &lt;shortdesc> elements. These elements should be unique for each topic to help distinguish
       it from other topics.</note></li>
     <li>To control the size of collection files, limit their content to a specific scope. If
            content applies globally across all <keyword keyref="companyname"/> products, put that
            content together; however, if content is shared only within a specific product, or a
            module within the product, create a collection file for that more limited scope, rather
            than including all content within the same file.</li>
          <li>Store collection files in the Common Content folder at the appropriate level of reuse.
            For example, notes that are shared across all of <keyword keyref="companyname"/> are
            kept in the coll_ReusableNotes.dita file in the Common folder at the root of the file
            server. However, notes that are used only within a specific component are kept in the
              coll_<i>Component</i>_ReusableNotes.dita file in the Common folder within the
            appropriate component folder.</li>
     <li>Include content no smaller than a sentence in length. If you want to vary sentence content
            by a word or phrase, use key files instead.</li>
     <li>Ensure each element in the file has a unique ID. Use your authoring tool to generate an ID
      if it does not automatically assign it when you add the element. </li>
     <li>Keep in mind that any nested elements are included when you reference an element. Be sure to
      nest all content that will be used together in a single element; however, if nested content
      might also be reused alone, ensure that you have provided IDs on those nested elements as
      well. If an element might be reused without its nested content, do not nest the content in the
      collection file; in situations where all content is needed, you will have to include multiple
      references.</li>
     <li>Use xml comments to document your collection files. Include information that helps identify
      when each element in the file is referenced as well as metadata keywords that might help
      authors find the specific content they need. </li>
    </ul></p>
   <p>
    <codeblock>Placeholder for example.</codeblock>
   </p>
  </section><section>
      <title>Replacing Conditional Processing with Collection Files</title>
      <p>In situations where unique content to a specific condition represents more than 50% of the
        topic content, create a topic-specific collection file rather than cluttering a single topic
        with a large amount of conditional text. When a file contains significant amounts of
        conditional content, it becomes much more difficult for an author to interpret the exact
        outcome they will get when processing the file for each condition. Instead, isolate the
        common content to all situations in a topic-specific collection file and then create
        individual files for each condition that also has unique content. In each of the individual
        files, conref to the common content in the topic-specific collection file and include the
        unique content in the appropriate places within the file. For example, suppose a single
        topic contains conditions for three products, as shown:</p>
      <codeblock>&lt;p>This paragraph is common to all.&lt;/p>
&lt;p product="A">This paragraph is true only for product A.&lt;/p>
&lt;p product="B C">This paragraph is true for both product B and C.&lt;/p>
&lt;p>This paragraph is common to all.&lt;/p>
&lt;ul>
&lt;li product="A">This list item is true only for product A.&lt;/li>
&lt;li product="B">This list item is true only for product B.&lt;/li>
&lt;li product="C">This list item is true only for product C.&lt;/li>
&lt;li>This list item is true for all.&lt;/li>
&lt;li>This list item is true for all.&lt;/li>
&lt;li product="A B">This list item is true for both product A and B.&lt;/li>
&lt;/ul>
&lt;p>This paragraph is common to all.</codeblock>
      <p>Although this is a simplistic case, it is clear that the more conditions set within the a
        file, the more difficult it can be for an author to easily determine what content applies in
        what situations. To avoid this situation, create four files: a common collection file for
        the topic and three separate topic files for each product. In this format, it is readily
        apparent what the output of each file will be for a specific product, while avoiding copying
        and pasting content that might later have to be updated in each file separately.</p>
      <codeblock>&lt;title>Common collection file&lt;/title>
&lt;p id="p1">This paragraph is common to all.&lt;/p>
&lt;p id="p2">This paragraph is true for both product B and C.&lt;/p>
&lt;p id="p3">This paragraph is common to all.&lt;/p>
&lt;ul>
&lt;li id="li1">This list item is true for all.&lt;/li>
&lt;li id="li2">This list item is true for all.&lt;/li>
&lt;li id="li3">This list item is true for both product A and B.&lt;/li>
&lt;/ul>
&lt;p id="p4">This paragraph is common to all.</codeblock>
      <codeblock>&lt;title>Product A&lt;/title>
&lt;p conref="CommonContent/p1"/>
&lt;p>This paragraph is true only for product A.&lt;/p>
&lt;p conref="CommonContent/p3"/>
&lt;ul>
&lt;li>This list item is true only for product A.&lt;/li>
&lt;li conref="CommonContent/li1"/>
&lt;li conref="CommonContent/li2"/>
&lt;li conref="CommonContent/li3"/>
&lt;/ul>
&lt;p conref="CommonContent/p4"/></codeblock>
      <codeblock>&lt;title>Product B&lt;/title>
&lt;p conref="CommonContent/p1"/>
&lt;p conref="CommonContent/p2"/>
&lt;p conref="CommonContent/p3"/>
&lt;ul>
&lt;li>This list item is true only for product B.&lt;/li>
&lt;li conref="CommonContent/li1"/>
&lt;li conref="CommonContent/li2"/>
&lt;li conref="CommonContent/li3"/>
&lt;/ul>
&lt;p conref="CommonContent/p4"/></codeblock>
      <codeblock>&lt;title>Product C&lt;/title>
&lt;p conref="CommonContent/p1"/>
&lt;p conref="CommonContent/p2"/>
&lt;p conref="CommonContent/p3"/>
&lt;ul>
&lt;li>This list item is true only for product C.&lt;/li>
&lt;li conref="CommonContent/li1"/>
&lt;li conref="CommonContent/li2"/>
&lt;/ul>
&lt;p conref="CommonContent/p4"/></codeblock>
    </section><section>
   <title>Referencing Individual Elements from Collection Files</title>
   <p><indexterm>conref attribute</indexterm>In order to reference information from a collection
        file, the referenced information must be valid at the location you are referencing it in the
        new topic. To ensure that the element is valid, you first insert an empty element of the
        same type you are referencing at the location where you want the information to occur. You
        then assign a <i>conref</i> attribute to the element that points to the appropriate element
        in the collection file. The reference must be in the following syntax:
          <codeph>FilePathAndName#topicID/elementID</codeph>. For example, suppose you want to
        reference the following note which is found in the file CollectionFiles/coll_Caution.dita,
        which has a topic id of "Caution".</p>
   <p><codeph>&lt;note type="Caution" ID="...">...&lt;/note></codeph></p>
   <p>You would include the following element in your topic:</p>
   <p><codeph>&lt;note conref="CollectionFiles/coll_Caution.dita#Caution/..."/></codeph></p>
   <note type="tip">Use your authoring tool's menus and commands to insert content references to
    avoid coding the element by hand and to ensure the reference syntax is correct.</note>
   <p>The <i>@conref</i> attribute can reference only one element at a time. However, all nested
    elements within that element are also included in the reference. Before referencing an element,
    make sure that all nested content applies in your specific situation.</p>
  </section>
  <section>
   <title>Referencing a range of elements from a collection file </title>
   <p><indexterm>conrefend attribute</indexterm>In DITA 1.2, you can add a contiguous set of
    unnested elements by using a conref range. To do so, the first and last elements in the range
    must be the same element type, share the same parent, and have unique IDs. For example, to
    reference a set of steps, both the first and last elements in the range would be &lt;step>
    elements, which share the same &lt;steps> parent.</p>
   <p>To use a conref range, include an element of the same type you are referencing and assign two
     attributes:<ul id="ul_cq2_kdx_xh">
     <li>the <i>@conref</i> attribute points to the first element in the range</li>
     <li>the <i>@conrefend</i> attribute points to the last element in the range</li>
    </ul> For example, suppose you have created a collection file,
    "CollectionFiles/coll_Steps.dita", with a topic <i>id</i> of "Steps", as shown in the
    example.</p>
   <codeblock scale="80">&lt;steps>
  &lt;step ID="Step1">&lt;cmd>This is step 1.&lt;/cmd>&lt;/step>
  &lt;step ID="Step2">&lt;cmd>This is step 2.&lt;/cmd>&lt;/step>
  &lt;step ID="Step3">&lt;cmd>This is step 3.&lt;/cmd>&lt;/step>
  &lt;step ID="Step4">&lt;cmd>This is step 4.&lt;/cmd>&lt;/step>
  &lt;step ID="Step5">&lt;cmd>This is step 5.&lt;/cmd>&lt;/step>
&lt;/steps></codeblock>
   <p>To reference steps 1 through 4, you would include the following in your topic:</p>
   <p><codeph>&lt;step conref="CollectionFiles/coll_Steps.dita#Steps/Step1"
     conrefend="CollectionFiles/coll_Steps.dita#Steps/Step4"/></codeph></p>
   <note type="tip">Use your authoring tool's menus and commands to insert content references to
    avoid coding the element by hand and to ensure the reference syntax is correct.</note>
  </section>
  
 </conbody>
</concept>
